{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Galaxygine! Thank you for using Galaxygine, the game engine written using TypeScript for the web! To see how to get started, click here","title":"Home"},{"location":"#welcome-to-galaxygine","text":"Thank you for using Galaxygine, the game engine written using TypeScript for the web! To see how to get started, click here","title":"Welcome to Galaxygine!"},{"location":"getting_started/","text":"Getting Started with Galaxygine Here are a few simple steps to install and configure Galaxygine Installation There are a few ways to install Galaxygine. Using a script You can create a Galaxygine project using a python script. Where to find it Said script can be found here . And can be downloaded with this command: wget https://gist.githubusercontent.com/GalaxyGamingBoy/02f34126b1a5ddf202014119af1600fa/raw/makeGalaxygineTemplate.py . Usage The script can be run like this: ./makeGalaxygineTemplate.py < PROJECT NAME > Manualy downloading it The latest template can be found here . Just extract it and use it. Building a project To build the project run npm run build To sync the project to the latest Galaxygine version run npm run sync To build & sync the project run npm run sync:build","title":"Getting Started"},{"location":"getting_started/#getting-started-with-galaxygine","text":"Here are a few simple steps to install and configure Galaxygine","title":"Getting Started with Galaxygine"},{"location":"getting_started/#installation","text":"There are a few ways to install Galaxygine.","title":"Installation"},{"location":"getting_started/#using-a-script","text":"You can create a Galaxygine project using a python script.","title":"Using a script"},{"location":"getting_started/#where-to-find-it","text":"Said script can be found here . And can be downloaded with this command: wget https://gist.githubusercontent.com/GalaxyGamingBoy/02f34126b1a5ddf202014119af1600fa/raw/makeGalaxygineTemplate.py .","title":"Where to find it"},{"location":"getting_started/#usage","text":"The script can be run like this: ./makeGalaxygineTemplate.py < PROJECT NAME >","title":"Usage"},{"location":"getting_started/#manualy-downloading-it","text":"The latest template can be found here . Just extract it and use it.","title":"Manualy downloading it"},{"location":"getting_started/#building-a-project","text":"To build the project run npm run build To sync the project to the latest Galaxygine version run npm run sync To build & sync the project run npm run sync:build","title":"Building a project"},{"location":"about/contributions/","text":"Contributions You can contribute to the engine by opening a pull request on the git repo You can contribute to the documentation by opening a pull request on the git repo","title":"Contributions"},{"location":"about/contributions/#contributions","text":"You can contribute to the engine by opening a pull request on the git repo You can contribute to the documentation by opening a pull request on the git repo","title":"Contributions"},{"location":"about/license/","text":"MIT License Copyright (c) 2022 GalaxyGamingBoy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#mit-license","text":"Copyright (c) 2022 GalaxyGamingBoy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"engine/galaxygine/core/","text":"Core This file contains core methods of Galaxygine, from the initialization to touchscreen checking. Methods The methods avainable are: engineInitialization(mountID, canvasWidth, canvasHeight): CanvasRenderingContext2D getScreenSize(): Vector2 hasTouchscreen(): Boolean engineInitialization(mountID, canvasWidth, canvasHeight): CanvasRenderingContext2D Parameter Parameter Type Default Usage mountID string galaxygine The id of the element that the Galaxygine canvas will be mounted on canvasWidth number window.innerWidth The width of the canvas canvasHeight number window.innerHeight The height of the canvas Return Value Return Type Usage galaxygine_context CanvasRenderingContext2D The 2D canvas rendering context of the new canvas This function initializes Galaxygine by creating a canvas on the element with the id given to it by mountID and has a width of canvasWidth and height of canvasHeight. getScreenSize(): Vector2 Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage windowSize Vector2 The size of the window This function return the width and the height of the browser window. hasTouchscreen(): Boolean Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage hasTouchscreen Boolean Does the device has a touchscreen connected? This function return a boolean indicating if the device has a touchscreen connected.","title":"Core"},{"location":"engine/galaxygine/core/#core","text":"This file contains core methods of Galaxygine, from the initialization to touchscreen checking.","title":"Core"},{"location":"engine/galaxygine/core/#methods","text":"The methods avainable are: engineInitialization(mountID, canvasWidth, canvasHeight): CanvasRenderingContext2D getScreenSize(): Vector2 hasTouchscreen(): Boolean","title":"Methods"},{"location":"engine/galaxygine/core/#engineinitializationmountid-canvaswidth-canvasheight-canvasrenderingcontext2d","text":"Parameter Parameter Type Default Usage mountID string galaxygine The id of the element that the Galaxygine canvas will be mounted on canvasWidth number window.innerWidth The width of the canvas canvasHeight number window.innerHeight The height of the canvas Return Value Return Type Usage galaxygine_context CanvasRenderingContext2D The 2D canvas rendering context of the new canvas This function initializes Galaxygine by creating a canvas on the element with the id given to it by mountID and has a width of canvasWidth and height of canvasHeight.","title":"engineInitialization(mountID, canvasWidth, canvasHeight): CanvasRenderingContext2D"},{"location":"engine/galaxygine/core/#getscreensize-vector2","text":"Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage windowSize Vector2 The size of the window This function return the width and the height of the browser window.","title":"getScreenSize(): Vector2"},{"location":"engine/galaxygine/core/#hastouchscreen-boolean","text":"Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage hasTouchscreen Boolean Does the device has a touchscreen connected? This function return a boolean indicating if the device has a touchscreen connected.","title":"hasTouchscreen(): Boolean"},{"location":"engine/galaxygine/draw/","text":"Draw This file contains core methods of Galaxygine, from the initialization to touchscreen checking. Methods The methods avainable are: constructor(context): void setCanvasContext(context): void drawRectangle(position, size, id, color): void drawRectangleOutline(position, size, id, color): void drawRectangleWithOutline(position, size, id, color): void drawImage(position, size, imagePath, id): void drawText(position, text, id, color, font): void drawStrokeText(position, text, id, color, font): void eraseRectangle(position, size): void eraseCanvas(): void constructor(): void Parameter Parameter Type Default Usage context CanvasRenderingContext2D - The context that will be used for graphics Return Value Return Type Usage - - - Sets a renderer and the 2D context to use. setCanvasContext(): void Parameter Parameter Type Default Usage context CanvasRenderingContext2D - The context that will be used for graphics Return Value Return Type Usage - - - Sets the 2D context to use. drawRectangle(position, size, id, color): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the rectangle will be id string ' ' The id that will be assigned on the rectangle color string '#000000' The color that the rectangle will be in Return Value Return Type Usage - - - Draws a rectange at the specified position with the specified size and the specified color. drawRectangleOutline(position, size, id, color): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the outline of the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the outline of the rectangle will be id string '' The id that will be assigned on the outline of rectangle color string '#000000' The color that the outline of rectangle will be in Return Value Return Type Usage - - - Draws an outline of a rectange at the specified position with the specified size and the specified color. drawRectangleWithOutline(position, size, id, outlineColor, squareColor): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the rectangle will be id string ' ' The id that will be assigned on the rectangle outlineColor string '#000000' The color that the outline of rectangle will be in rectangleColor string '#000000' The color that the rectangle will be in Return Value Return Type Usage - - - Draws a rectange with a seperate outline at the specified position with the specified size and the specified color. Note The rectangle with the outline has an id of id + '_outline' . i.e. If the id is rect the rectangle with the outline id will be rect_outline drawImage(position, size, imagePath, id): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the image will be rendered in size Vector2 Vector2(0, 0) The size that the image will be imagePath string ' ' The file location of the image id string ' ' The id that will be assigned on the rectangle Draws an image from the specified location in the specified position at the specified sized with the specified id drawText(position, text, id, color, font): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the text will be rendered in text string ' ' The text that will be shown id string ' ' The id that will be assigned on the rectangle color string '#000000' The color of the text font string '48px serif' The font that the text will use to be displayed Return Value Return Type Usage - - - Displays the specified text at the specified position with the specified id, color and font. drawStrokeText(position, text, id, color, font): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the text will be rendered in text string ' ' The text that will be shown id string ' ' The id that will be assigned on the rectangle color string '#000000' The color of the stroked text font string '48px serif' The font that the stroked text will use to be displayed Return Value Return Type Usage - - - Displays the specified stroked text at the specified position with the specified id, color and font. eraseRectangle(position, size): void Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size of the rectangle Return Value Return Type Usage - - - Erases a rectangle on the specified position with the specifed size. eraseCanvas(): void Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage - - - Erases the whole canvas.","title":"Draw"},{"location":"engine/galaxygine/draw/#draw","text":"This file contains core methods of Galaxygine, from the initialization to touchscreen checking.","title":"Draw"},{"location":"engine/galaxygine/draw/#methods","text":"The methods avainable are: constructor(context): void setCanvasContext(context): void drawRectangle(position, size, id, color): void drawRectangleOutline(position, size, id, color): void drawRectangleWithOutline(position, size, id, color): void drawImage(position, size, imagePath, id): void drawText(position, text, id, color, font): void drawStrokeText(position, text, id, color, font): void eraseRectangle(position, size): void eraseCanvas(): void","title":"Methods"},{"location":"engine/galaxygine/draw/#constructor-void","text":"Parameter Parameter Type Default Usage context CanvasRenderingContext2D - The context that will be used for graphics Return Value Return Type Usage - - - Sets a renderer and the 2D context to use.","title":"constructor(): void"},{"location":"engine/galaxygine/draw/#setcanvascontext-void","text":"Parameter Parameter Type Default Usage context CanvasRenderingContext2D - The context that will be used for graphics Return Value Return Type Usage - - - Sets the 2D context to use.","title":"setCanvasContext(): void"},{"location":"engine/galaxygine/draw/#drawrectangleposition-size-id-color-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the rectangle will be id string ' ' The id that will be assigned on the rectangle color string '#000000' The color that the rectangle will be in Return Value Return Type Usage - - - Draws a rectange at the specified position with the specified size and the specified color.","title":"drawRectangle(position, size, id, color): void"},{"location":"engine/galaxygine/draw/#drawrectangleoutlineposition-size-id-color-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the outline of the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the outline of the rectangle will be id string '' The id that will be assigned on the outline of rectangle color string '#000000' The color that the outline of rectangle will be in Return Value Return Type Usage - - - Draws an outline of a rectange at the specified position with the specified size and the specified color.","title":"drawRectangleOutline(position, size, id, color): void"},{"location":"engine/galaxygine/draw/#drawrectanglewithoutlineposition-size-id-outlinecolor-squarecolor-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size that the rectangle will be id string ' ' The id that will be assigned on the rectangle outlineColor string '#000000' The color that the outline of rectangle will be in rectangleColor string '#000000' The color that the rectangle will be in Return Value Return Type Usage - - - Draws a rectange with a seperate outline at the specified position with the specified size and the specified color. Note The rectangle with the outline has an id of id + '_outline' . i.e. If the id is rect the rectangle with the outline id will be rect_outline","title":"drawRectangleWithOutline(position, size, id, outlineColor, squareColor): void"},{"location":"engine/galaxygine/draw/#drawimageposition-size-imagepath-id-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the image will be rendered in size Vector2 Vector2(0, 0) The size that the image will be imagePath string ' ' The file location of the image id string ' ' The id that will be assigned on the rectangle Draws an image from the specified location in the specified position at the specified sized with the specified id","title":"drawImage(position, size, imagePath, id): void"},{"location":"engine/galaxygine/draw/#drawtextposition-text-id-color-font-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the text will be rendered in text string ' ' The text that will be shown id string ' ' The id that will be assigned on the rectangle color string '#000000' The color of the text font string '48px serif' The font that the text will use to be displayed Return Value Return Type Usage - - - Displays the specified text at the specified position with the specified id, color and font.","title":"drawText(position, text, id, color, font): void"},{"location":"engine/galaxygine/draw/#drawstroketextposition-text-id-color-font-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the text will be rendered in text string ' ' The text that will be shown id string ' ' The id that will be assigned on the rectangle color string '#000000' The color of the stroked text font string '48px serif' The font that the stroked text will use to be displayed Return Value Return Type Usage - - - Displays the specified stroked text at the specified position with the specified id, color and font.","title":"drawStrokeText(position, text, id, color, font): void"},{"location":"engine/galaxygine/draw/#eraserectangleposition-size-void","text":"Parameter Parameter Type Default Usage position Vector2 Vector2(0, 0) The position that the rectangle will be rendered in size Vector2 Vector2(0, 0) The size of the rectangle Return Value Return Type Usage - - - Erases a rectangle on the specified position with the specifed size.","title":"eraseRectangle(position, size): void"},{"location":"engine/galaxygine/draw/#erasecanvas-void","text":"Parameter Parameter Type Default Usage - - - - Return Value Return Type Usage - - - Erases the whole canvas.","title":"eraseCanvas(): void"}]}